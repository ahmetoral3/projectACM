#include <WiFi.h>
#include <ESPAsyncWebServer.h>

const int forward = 0;
const int backward = 4;
const int left = 16;
const int right = 17;
int buttonStateForward;
int buttonStateBackward;
int buttonStateLeft;
int buttonStateRight;

String message;
  
const char* ssid = "Ziggo0957612";
const char* password =  "Ailecek03@-nl";
  
AsyncWebServer server(80);
  
void setup(){
   
  Serial.begin(9600);

  pinMode(forward,INPUT);
  pinMode(backward,INPUT);
  pinMode(left,INPUT);
  pinMode(right,INPUT);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  
  Serial.println(WiFi.localIP());
  
  server.on("/test", HTTP_GET, [](AsyncWebServerRequest *request){
    Serial.println("Request received");
    request->send(200, "text/plain", "Hello from server");
  });

   server.on("/motor", HTTP_GET, [](AsyncWebServerRequest *request){
    Serial.println("Request received");
    request->send(201, "text/plain", message);
  });
  
  server.begin();
}
  
void loop(){

  buttonStateForward = digitalRead(forward);
  buttonStateBackward = digitalRead(backward);
  buttonStateLeft = digitalRead(left);
  buttonStateRight = digitalRead(right);

  if(buttonStateForward == HIGH){
    message = "1";
  }else if (buttonStateBackward == HIGH)
  {
    message = "2";
  }else if (buttonStateLeft == HIGH)
  {
    message = "4";
  }else if (buttonStateRight == HIGH)
  {
    message = "8";
  }else{
    message = "0";
  }
   

  //vooruit
 /* if (buttonStateForward == HIGH){
    server.on("/test", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(200, "text/plain", "voor");
  });
  }
  //achteruit
  if (buttonStateBackward == HIGH){
    server.on("/test", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(200, "text/plain", "achter");
  });
  }
  //rechts
  if (buttonStateRight == HIGH){
    server.on("/test", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(200, "text/plain", "rechts");
  });
  }
  //links
  if (buttonStateLeft == HIGH){
    server.on("/test", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(200, "text/plain", "links");
  });
  }*/
}
